---
# Набор тест-кейсов для проверки веб-приложения Интернет-магазин #
# Функциональное тестирование #
- summary: |
    Проверка поиска товаров по ключевому слову
  requirement: |
    При вводе названия товара в поле "Поиск", пользователь должен увидить карточку этого товара в центральной области сайта
  prerequisites: |
    Открыта страница магазина по адресу: https://hexlet-products-store.vercel.app/
  test-data: |
    No data
  steps:
    - Вводим название товара, например Samsung Universe 9 в поле поиска
  expected-result: |
    Пользователь должен увидеть карточку указанного товара, в центральной области сайта

- summary: |
    Проверка поиска товаров по категории
  requirement: |
    При выборе категории товара из выпадающего списка "Категория", пользователь должен видеть в центральной области сайта все товары выбранной категории
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Выбираем категорию, например smartphones из выпадающего списка
  expected-result: |
    Пользователь должен увидеть карточки всех товаров из указанной категории в центральной области сайта

- summary: |
    Проверка ввода в поле поиска ошибочных данных
  requirement: |
    При вводе в поле "Поиск" ошибочных данных, пользователь не должен видеть товаров
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Вводим в поле "Поиск", например последовательность цифр "0123", смотрим результат, очищаем поле
    - Вводим в поле "Поиск", например последовательность из букв кирилицей "пкбюв", смотрим результат, очищаем поле
    - Вводим в поле "Поиск", например последовательность из букв латиницей "fgtur", смотрим результат, очищаем поле
    - Вводим в поле "Поиск", например последовательность из букв и цифр "fdgu0trhtriшщ123", смотрим результат, очищаем поле
  expected-result: |
    Пользователь не видет товаров по ошибочным запросам, в центральной области сайта выводится сообщение "Ничего не найдено!"

- summary: |
    Проверка работы фильтрации товаров по цене
  requirement: |
    При выборе в поле "Цена от-до", любого числа больше 0, пользователь должен видеть в центральной области сайта все товары (при наличии) указанного ценового диапазона
  prerequisites: |
    Открыта страница магазина, чек-бокс "В наличии" отмечен
  test-data: |
    Тестовые данные
    1-ая тестовая пара чисел (цена от-до) = 0, 1
    2-ая тестовая пара чисел (цена от-до) = 0, 50
    3-ая тестовая пара чисел (цена от-до) = 0, 2000
  steps:
    - Вводим 1-ую тестовую пару чисел, смотрим результат
    - Вводим 2-ую тестовую пару чисел, смотрим результат
    - Вводим 3-ю тестовую пару чисел, смотрим результат
  expected-result: |
    Пользователь видит товары из указанного ценового диапазона (если такие есть в наличии) в центральной области сайта

- summary: |
    Проверка добавления в фильтр товаров с отрицательной ценой
  requirement: |
    Пользователь не может выбирать в поле "Цена от-до" числа меньше 0
  prerequisites: |
    Открыта страница магазина, чек-бокс "В наличии" отмечен
  test-data: |
    Тестовые данные
    1-ая тестовая пара чисел (цена от-до) = 0, -300
    2-ая тестовая пара чисел (цена от-до) = -1, -20
  steps:
    - Вводим 1-ую тестовую пару чисел
    - Вводим 2-ую тестовую пару чисел
  expected-result: |
    Пользователь видит, что невозможно ввести отрицательную цену в поле "Цена от-до"
    
- summary: |
    Проверка работы фильтрации товаров по производителю
  requirement: |
    При отметке любого чек-бокса "Производитель", пользователь должен видеть в центральной области все товары указанного производителя
  prerequisites: |
    Открыта страница магазина, чек-бокс "В наличии" отмечен
  test-data: |
    No data
  steps:
    - Отмечаем производителя, например Samsung, смотрим результат, выключаем чек-бокс
    - Отмечаем производителя, например Apple, смотрим результат, выключаем чек-бокс
    - Отмечаем производителя, например Golden, смотрим результат, выключаем чек-бокс
    - Отмечаем одновременно трех указанных производителей, обновляем страницу
  expected-result: |
    Пользователь видит карточки товаров отмеченных производителей в центральной области сайта

- summary: |
    Проверка просмотра товаров и подробностей о них на сайте
  requirement: |
    Пользователь должен видеть товары с подробностями в центральной области сайта без перезагрузки страницы
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Нажатием на кнопку "Следующая" вверху страницы перемещаемся постранично по всему каталогу товаров
    - Нажатием на кнопку "Предыдущая" вверху страницы перемещаемся постранично по всему каталогу товаров в обратном порядке
    - Нажатием на кнопки "Следующая" и "Предыдущая" внизу страницы перемещаемся постранично по всему каталогу товаров вперед и назад
  expected-result: |
    Пользователь без перезагрузки страницы, постранично перемещается по каталогу товаров нажатием кнопок "Предыдущая" или "Следующая"
    Пользователь видит все подробности о товарах на всех страницах каталога

- summary: |
    Проверка просмотра подробной информации о товаре в карточках товаров
  requirement: |
    Пользователь должен видеть, при открытии любой карточки товара - подробности о товаре
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Открываем поочередно карточки товаров, например Samsung Universe 9, Automatic Motor Gas Motorcycles и смотрим результат
  expected-result: |
    Пользователь видит на странице выбранного товара все подробности о нем, название, рейтинг, цену со скидкой и без

- summary: |
    Проверка добавления товаров в корзину и просмотра корзины
  requirement: |
    Пользователь должен по кнопке "В корзину", в карточке товара, отправить любой товар в корзину 
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Нажимаем в каталоге для товара, например Samsung Universe 9 кнопку "В корзину"
    - Открываем карточку товара, например Automatic Motor Gas Motorcycles и нажимаем кнопку "В корзину"
    - Выбираем в главном меню (верхнее) "Корзина" и открываем страницу корзины
  expected-result: |
    Пользователь нажимает в карточке любого товара кнопку "В корзину" и видит рядом с пунктом главного меню "Корзина" ярлык с количеством товара в корзине
    Пользователь переходит в корзину, видит все добавленные товары на странице корзины

- summary: |
    Проверка удаления товаров из корзины
  requirement: |
    Пользователь должен удалять любой товар на странице корзины
  prerequisites: |
    Открыта страница корзины по адресу: https://hexlet-products-store.vercel.app/cart, в корзине находится любые 3 товара
  test-data: |
    No data
  steps:
    - Нажимаем поочередно для товаров в корзине (например, Samsung Universe 9, Automatic Motor Gas Motorcycles, Orange Essence Food Flavou) кнопку "Удалить", товары удаляются из корзины
  expected-result: |
    Пользователь может удалять из корзины товары кнопкой "Удалить" рядом с товаром

- summary: |
    Проверка функции очистки корзины
  requirement: |
    Пользователь должен удалять любой товар из корзины кнопкой "Очистить корзину"
  prerequisites: |
    Открыта страница корзины по адресу: https://hexlet-products-store.vercel.app/cart, в корзине находится любые 3 товара
  test-data: |
    No data
  steps:
    - Нажимаем кнопку "Очистить корзину" и удаляем все товары (например, Samsung Universe 9, Automatic Motor Gas Motorcycles, Orange Essence Food Flavou) из корзины
  expected-result: |
    Пользователь удаляет любые товары из корзины кнопкой "Очистить корзину"

- summary: |
    Проверка функции выбора товаров из корзины
  requirement: |
    Пользователь должен на странице корзины продолжать выбор товаров по кнопке "Продолжить покупки"
  prerequisites: |
    Открыта страница корзины по адресу: https://hexlet-products-store.vercel.app/cart, в корзине находится любые 3 товара
  test-data: |
    No data
  steps:
    - Нажимаем кнопку в корзине "Продолжить покупки" и открываем страницу каталога магазина
  expected-result: |
    Пользователь переходит по кнопке "Продолжить покупки" на страницу каталога и продолжает выбирать товары из каталога

- summary: |
    Проверка офрмления и оплаты товаров из корзины
  requirement: |
    Пользователь должен оформить товар находящийся в корзине с автоматическим переходом на страницу оплаты
  prerequisites: |
    Открыта страница корзины по адресу: https://hexlet-products-store.vercel.app/cart, в корзине находятся любые 2-3 товара
  test-data: |
    No data
  steps:
    - Нажимаем кнопку "Оформить заказ", открывается страница оплаты
  expected-result: |
    Пользователь в корзине нажимает кнопку "Оформить заказ" и попадает на страницу оплаты

- summary: |
    Проверка наличия корзины в сессии браузера
  requirement: |
    Пользователь должен не терять корзину до выхода со страницы магазина 
  prerequisites: |
    Открыта страница магазина в браузере Chrome, в корзине 2 товара
  test-data: |
    Тестовые данные
    Товар 1, например = Samsung Universe 9
    Товар 2, например = Automatic Motor Gas Motorcycles
  steps:
    - Открываем инструмент DevTools браузера Chrome раздел "Хранение сеансов"
    - Перезагружаем 3-5 раза страницу магазина, затем перемещаемся по каталогу вперед-назад кнопками навигации
    - Переходим по страницам сайта кнопками "В корзину", "Продолжить покупки"
  expected-result: |
    Пользователь видит по ярлыку возле пункта гланого меню "Корзина" неизменное количество товаров в корзине

# Нефункциональное тестирование #
- summary: |
    Проверка функции перемещения по каталогу без перезагрузки страницы
  requirement: |
    Пользователь должен перемещаться по каталогу товаров вперед и назад без перезагрузки страницы
  prerequisites: |
    Открыта страница магазина
  test-data: |
    No data
  steps:
    - Нажимаем кнопку "Следующая" несколько раз, до окончания каталога
    - Нажимаем на кнопку "Предыдущая" несколько раз, тем самым возвращаемся в начало каталога
  expected-result: |
    Пользователь должен переместиться в любое место каталога без перезагрузки страницы нажатием кнопок "Следующая", "Предыдущая"

- summary: |
    Проверка наличия мобильной версии сайта
  requirement: |
    Сайт должен отображаться без искажений элементов страницы, все элементы должны быть доступны, текст читабельным на мобильных экранах
  prerequisites: |
    В браузере запущен инструмент DevTools (панель инструментов "Устройства"), открыта страница магазина
  test-data: |
    Тестовые данные
    1-я ширина экрана = 991px
    2-я ширина экрана = 767px
    3-я ширина экрана = 360px
  steps:
    - Вводим 1-е значение ширины экрана, проверяем как отображаются все элементы страницы сайта
    - Вводим 2-е значение ширины экрана, проверяем как отображаются все элементы страницы сайта
    - Вводим 3-е значение ширины экрана, проверяем как отображаются все элементы страницы сайта
  expected-result: |
    Пользователь должен видеть все содержимое страниц без искажений, текст читабельным, все элементы страниц должны быть доступны

- summary: |
    Проверка функционирования мобильной версии сайта
  requirement: |
    Сайт должен отрабатывать основной функционал в мобильной версии
  prerequisites: |
    Открыта страница сайта в браузере Google Chrome, запущен инструмент DevTools, в DevTools активна панель инструментов "Устройства"
  test-data: |
    Тестовые данные
    Ширина экрана (берем среднее значение) = 767px
  steps:
    - Выполняем перемещение по каталогу кнопками "Следующая" и "Предыдущая", смотрим как отображаются сведения и подробности о товаре
    - Выполняем поиск товара по ключевому слову и по категориям
    - Отправляем любые 2-3 товара в корзину, проверяем отображение товаров в корзине, подробные сведения о товаре, удаление товаров из корзины
    - Отправляем любые 2-3 товара в корзину, проверяем чтобы корзина хранилась в сессии браузера
    - Отправляем любые 2-3 товара в корзину, проверяем возможность продолжать выбор товаров из корзины
    - Отправляем любые 2-3 товара в корзину, проверяем возможность оформление заказа из корзины
  expected-result: |
    Пользователь должен иметь возможность в мобильной версии премещаться по каталогу, видеть подробности о товарах, выбирать любой товар и оформлять заказ

- summary: |
    Проверка совместимости с последними версиями браузеров
  requirement: |
    Основные функции сайта должны работать без ошибок в последних версиях браузеров, все элементы должны быть доступны, текст читабельным 
  prerequisites: |
    Открыта страница магазина
  test-data: |
    Тестовые данные
    1-й браузер = Google Chrome
    2-й браузер = Firefox
  steps:
    - Запускаем 1-й браузер, проверяем отображение товаров, перемещение по каталогу, фильтры, функции корзины, оформление товаров
    - Запускаем 2-й браузер, проверяем отображение товаров, перемещение по каталогу, фильтры, функции корзины, оформление товаров
  expected-result: |
    Пользователю доступны без ошибок все функции сайта в последних версиях браузеров

# Тестирование неявных требований #
- summary: |
    Проверка функционирования сайта при переключении языка на Русский "Russian"
  requirement: |
    Основные функции сайта должны работать, все элементы доступны, текст читабельным на русском языке
  prerequisites: |
    Открыта страница магазина, выбран язык сайта Русский "Russian"
  test-data: |
    No data
  steps:
    - Переключаем язык сайта в выпадающем меню "Язык" на русский
    - Смотрим отображение всех элементов сайта и корзины, изменяем фильтры
  expected-result: |
    Пользователю доступен весь функционал сайта, содержимое страниц без искажений, текст легко читается на русском языке

- summary: |
    Проверка функционирования сайта при переключении языка на Английский "English"
  requirement: |
    Основные функции сайта должны работать, все элементы доступны, текст читабельным на английском языке
  prerequisites: |
    Открыта страница магазина, выбран язык сайта Английский "English"
  test-data: |
    No data
  steps:
    - Переключаем язык сайта в выпадающем меню "Язык" на английский
    - Смотрим отображение всех элементов сайта и корзины, изменяем фильтры
  expected-result: |
    Пользователю доступен весь функционал сайта, содержимое страниц без искажений, текст легко читается на английском языке
